# Generated by Django 2.0.5 on 2018-05-08 10:12

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('images', '0002_auto_20180507_2240'),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('text', models.TextField(max_length=1024)),
                ('author', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('author', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AlterModelOptions(
            name='imageconversion',
            options={},
        ),
        migrations.AddField(
            model_name='rating',
            name='image',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='images.ImageConversion'),
        ),
        migrations.AddField(
            model_name='comment',
            name='image',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='images.ImageConversion'),
        ),
        migrations.AlterUniqueTogether(
            name='rating',
            unique_together={('author', 'image')},
        ),
    ]
